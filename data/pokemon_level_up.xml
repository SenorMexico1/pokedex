<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data>
        <!-- Event-based trigger: When Pokemon gains experience -->
        <record id="trigger_pokemon_level_up" model="base.automation">
            <field name="name">Pokemon Level Up Trigger</field>
            <field name="model_id" ref="model_pokedex_trainer_pokemon"/>
            <field name="trigger">on_write</field>
            <field name="filter_domain">[('experience', '>=', 100)]</field>
            <field name="action_server_id" ref="action_level_up_pokemon"/>
        </record>
        
        <!-- Action that runs when the trigger fires -->
        <record id="action_level_up_pokemon" model="ir.actions.server">
            <field name="name">Level Up Pokemon Action</field>
            <field name="model_id" ref="model_pokedex_trainer_pokemon"/>
            <field name="binding_model_id" ref="model_pokedex_trainer_pokemon"/>
            <field name="state">code</field>
            <field name="code">
# Check if Pokemon has enough XP to level up
if record.experience >= (100 * record.level):
    # Reset experience and increase level
    record.experience = 0
    record.level_up()
    
    # Since we're repurposing res.partner as trainers (per README hint),
    # we'll use the existing user_ids field to notify any linked users
    if record.trainer_id.user_ids:
        # Get the first user linked to this trainer/partner
        user = record.trainer_id.user_ids[0]
        user.notify_info(
            title="Pokemon Level Up!",
            message="%s reached level %s!" % (record.nickname or record.pokemon_id.name, record.level)
        )
            </field>
        </record>
    </data>
</odoo>